# Generated by Django 5.0.3 on 2024-04-06 16:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("supervisor", "0002_utilisateur_groups_utilisateur_localites_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id_client",
                    models.AutoField(
                        db_column="ID_Client", primary_key=True, serialize=False
                    ),
                ),
                ("nom", models.CharField(db_column="Nom", max_length=255)),
                ("prenom", models.CharField(db_column="Prenom", max_length=255)),
                ("adresse", models.CharField(db_column="Adresse", max_length=255)),
                ("telephone", models.CharField(db_column="Telephone", max_length=20)),
                (
                    "email",
                    models.CharField(
                        blank=True, max_length=225, null=True, unique=True
                    ),
                ),
                ("genre", models.CharField(max_length=10)),
                (
                    "matricule",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
            ],
            options={
                "db_table": "client",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Produit",
            fields=[
                (
                    "id_produit",
                    models.AutoField(
                        db_column="ID_Produit", primary_key=True, serialize=False
                    ),
                ),
                (
                    "nom_produit",
                    models.CharField(db_column="NOM_PRODUIT", max_length=225),
                ),
                ("categorie", models.CharField(db_column="CATEGORIE", max_length=225)),
                ("p_unitaire", models.IntegerField(db_column="P_UNITAIRE")),
                ("quantite", models.IntegerField(db_column="QUANTITE")),
            ],
            options={
                "db_table": "produit",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="SupervisorUtilisateur",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
                ("localites", models.CharField(blank=True, max_length=200, null=True)),
                ("role", models.CharField(blank=True, max_length=200, null=True)),
                ("sex", models.CharField(blank=True, max_length=3, null=True)),
                ("tel", models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                "db_table": "supervisor_utilisateur",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": True,
                "unique_together": {("app_label", "model")},
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.PositiveSmallIntegerField()),
                ("change_message", models.TextField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.authuser",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.djangocontenttype",
                    ),
                ),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.djangocontenttype",
                    ),
                ),
            ],
            options={
                "db_table": "auth_permission",
                "managed": True,
                "unique_together": {("content_type", "codename")},
            },
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id_produit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="supervisor.produit",
                    ),
                ),
                ("quantite", models.IntegerField(db_column="QUANTITE")),
                ("date_ajout", models.DateTimeField(db_column="DATE_AJOUT")),
                ("id_gestionnaire", models.IntegerField()),
            ],
            options={
                "db_table": "stock",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Vente",
            fields=[
                (
                    "id_vente",
                    models.BigAutoField(
                        db_column="ID_VENTE", primary_key=True, serialize=False
                    ),
                ),
                ("prix_total", models.IntegerField(db_column="PRIX_TOTAL")),
                (
                    "id_client",
                    models.ForeignKey(
                        db_column="ID_CLIENT",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.client",
                    ),
                ),
                (
                    "id_produit",
                    models.ForeignKey(
                        db_column="ID_PRODUIT",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.produit",
                    ),
                ),
                (
                    "id_vendeur",
                    models.ForeignKey(
                        db_column="ID_VENDEUR",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.supervisorutilisateur",
                    ),
                ),
            ],
            options={
                "db_table": "vente",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.authgroup",
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.authpermission",
                    ),
                ),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": True,
                "unique_together": {("group", "permission")},
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.authgroup",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.authuser",
                    ),
                ),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": True,
                "unique_together": {("user", "group")},
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.authpermission",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.authuser",
                    ),
                ),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": True,
                "unique_together": {("user", "permission")},
            },
        ),
        migrations.CreateModel(
            name="SupervisorUtilisateurGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.authgroup",
                    ),
                ),
                (
                    "utilisateur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.supervisorutilisateur",
                    ),
                ),
            ],
            options={
                "db_table": "supervisor_utilisateur_groups",
                "managed": True,
                "unique_together": {("utilisateur", "group")},
            },
        ),
        migrations.CreateModel(
            name="SupervisorUtilisateurUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.authpermission",
                    ),
                ),
                (
                    "utilisateur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="supervisor.supervisorutilisateur",
                    ),
                ),
            ],
            options={
                "db_table": "supervisor_utilisateur_user_permissions",
                "managed": True,
                "unique_together": {("utilisateur", "permission")},
            },
        ),
    ]
